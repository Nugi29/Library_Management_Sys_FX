create database booklib;
use booklib;

-- Table: member
CREATE TABLE member (
    id VARCHAR(6) PRIMARY KEY AUTO_INCREMENT,
    nic VARCHAR(12) UNIQUE,
    name VARCHAR(45),
    address TEXT,
    membershipDate DATE,
    contact VARCHAR(12)
);

-- Table: author
CREATE TABLE author (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(45),
    contact VARCHAR(12)
);



-- Table: publisher
CREATE TABLE publisher (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(45),
    location TEXT,
    contact VARCHAR(12)
);

-- Table: category
CREATE TABLE category (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(25)
);

-- Table: book
CREATE TABLE book (
    id INT PRIMARY KEY AUTO_INCREMENT,
    isbn VARCHAR(13),
    name VARCHAR(20),
    price DECIMAL(10,2),
    publisher_id INT,
    main_category_id INT,
    FOREIGN KEY (publisher_id) REFERENCES publisher(id),
    FOREIGN KEY (main_category_id) REFERENCES category(id)
);

-- Table: sub_categories (Many-to-Many Relationship)
CREATE TABLE sub_categories (
    book_id INT,
    category_id INT,
    PRIMARY KEY (book_id, category_id),
    FOREIGN KEY (book_id) REFERENCES book(id),
    FOREIGN KEY (category_id) REFERENCES category(id)
);

-- Table: book_records
CREATE TABLE book_records (
    id INT PRIMARY KEY AUTO_INCREMENT,
    book_id INT,
    member_id VARCHAR(6),
    borrowed_date DATE,
    isReturned TINYINT(1),
    returnDate DATE,
    returnedDate DATE,
    FOREIGN KEY (book_id) REFERENCES book(id),
    FOREIGN KEY (member_id) REFERENCES member(id)
);

-- Table: book_author (Many-to-Many Relationship)
CREATE TABLE book_author (
    book_id INT,
    author_id INT,
    PRIMARY KEY (book_id, author_id),
    FOREIGN KEY (book_id) REFERENCES book(id),
    FOREIGN KEY (author_id) REFERENCES author(id)
);

-- Table: admin
CREATE TABLE admin (
    id INT PRIMARY KEY AUTO_INCREMENT,
    username VARCHAR(10),
    email VARCHAR(45),
    password VARCHAR(25)
);

-- Table: fine
CREATE TABLE fine (
    id INT PRIMARY KEY AUTO_INCREMENT,
    amount DECIMAL(10,2),
    date_count SMALLINT,
    book_record_id INT,
    admin_id INT,
    FOREIGN KEY (book_record_id) REFERENCES book_records(id),
    FOREIGN KEY (admin_id) REFERENCES admin(id)
);